Application.prototype._log = function(msg){    if(arguments.length === 1){        throw Error('a', 'b', 'c')        }        if(app.LOGGING){              var app_log_directory = app.ROOT_DIRECTORY + 'logs/'            var app_log_name = 'indesign.log'                                 var log_file = File(app_log_directory + app_log_name);            var log_message = []            var date = new Date            var log_type = [arguments[1]]                          log_message = [date.format("dd/mm/yyyy HH:MM:ss"), log_type, msg].join('\t') + '\n'                        log_file.open('e');            log_file.seek(0, 2);            log_file.write(log_message);            log_file.close();        }    		return date.format("dd/mm/yyyy HH:MM:ss")	}app.addons.push('Application.prototype._log');Application.prototype.debug = function(msg){    if(app.LOGGING_DEBUG){        app._log(msg, 'D')        }    }app.addons.push('Application.prototype.debug');Application.prototype.info = function(msg){    if(app.LOGGING_INFO){        app._log(msg, 'I')        }    }app.addons.push('Application.prototype.info');Application.prototype.warning = function(msg){    if(app.LOGGING_WARNING){        app._log(msg, 'W')        app.growl(msg)        }    }app.addons.push('Application.prototype.warning');Application.prototype.error = function(msg){    if(app.LOGGING_ERROR){        var date = app._log(msg, 'E')        app.growl(date + ' ' + msg, true)        }    }app.addons.push('Application.prototype.error');Application.prototype.critical = function(msg){    if(app.LOGGING_CRITICAL){        app._log(msg, '!')        app.growl(msg, true)        }    }app.addons.push('Application.prototype.critical');    